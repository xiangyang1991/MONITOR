${ } 的一些特异功能
为了完整起见，我这里再用一些例子加以说明 ${ } 的一些特异功能：
假设我们定义了一个变量为：
file=/dir1/dir2/dir3/my.file.txt
我们可以用 ${ } 分别替换获得不同的值：
${file#*/}：拿掉第一条 / 及其左边的字符串：dir1/dir2/dir3/my.file.txt
${file##*/}：拿掉最后一条 / 及其左边的字符串：my.file.txt
${file#*.}：拿掉第一个 .  及其左边的字符串：file.txt
${file##*.}：拿掉最后一个 .  及其左边的字符串：txt
${file%/*}：拿掉最后条 / 及其右边的字符串：/dir1/dir2/dir3
${file%%/*}：拿掉第一条 / 及其右边的字符串：(空值)
${file%.*}：拿掉最后一个 .  及其右边的字符串：/dir1/dir2/dir3/my.file
${file%%.*}：拿掉第一个 .  及其右边的字符串：/dir1/dir2/dir3/my
记忆的方法为：

# 是去掉左边(在鉴盘上 # 在 $ 之左边)
% 是去掉右边(在鉴盘上 % 在 $ 之右边)
单一符号是最小匹配﹔两个符号是最大匹配。


$0  shell的命令本身(包括完整路径)  
$1到$9 数字表示shell 的第几个参数   
$# 传递到脚本的参数个数  
$* 以一个单字符串显示所有向脚本传递的参数  
$$ 脚本运行的ID号  
$! 后台运行的最后一个进程的ID号  
$@ 与$*相同。  
$- 显示shell使用的当前选项。  
$? 显示最后命令的执行状况。0表示没有错误。
